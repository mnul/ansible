---

- hosts: all,!dockerpi
  become: true
  vars:
    node_exporter_version: "1.5.0"
    node_exporter_bin: /usr/local/bin/node_exporter
  
  tasks:
  
  - name: create systemd/service exists
    file: 
      path: /etc/systemd/service
      state: directory
      owner: root
    when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]
  
  - name: download and unzip node exporter
    unarchive:
      src: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
      dest: /tmp/
      remote_src: yes
      validate_certs: no
    when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]

  - name: move the binary to the final destination
    copy:
      src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
      dest: "{{ node_exporter_bin }}"
      owner: "manu"
      group: "users"
      mode: 0755
      remote_src: yes
    when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]

  - name: clean
    file:
      path: /tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/
      state: absent
    when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]

  - name: copy syncthing service file
    copy:
      src: node_exporter.service
      dest: /etc/systemd/system/node_exporter.service
      owner: root
      group: root
      mode: 0755
    when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]

  - name: enable node_exporter
    systemd:
      name: node_exporter
      state: started
      enabled: true
    when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]

  - name: restart node_exporter
    systemd:
      name: node_exporter
      state: restarted
      enabled: true
    when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]

